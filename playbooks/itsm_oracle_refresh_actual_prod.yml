---
- hosts: db_servers_prod
  become: yes
  gather_facts: True

  vars:
    ora_user: oracle
    ora_group1: dba
    ora_group2: oinstall
    ora_s3_scratchpad: "/mnt/hgfs/Linux_share/scratchpad/s3"

  tasks:

  - debug: var=ansible_distribution

  - name: Confirm Local Facts for Each Oracle Instance being Refreshed "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}" | itsm_oracle_refresh_actual_prod
    debug: var=ansible_local

  - name: Check if Lockfile Exists or an Earlier Refresh Still Running for "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}" | itsm_oracle_refresh_actual_prod
    stat:
      path: "{{ ora_s3_scratchpad }}/lockfile_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    register: file_status_prod

  - name: Create Lockfile if Doesnt Exist for "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}" | itsm_oracle_refresh_actual_prod
    ansible.builtin.file:
      path: "{{ ora_s3_scratchpad }}/lockfile_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
      state: touch
      mode: '0644'
    when: 
      - not file_status_prod.stat.exists
   
  - name: Generate Local SOURCE Db Export ParFile from a Centralized JINJA Refresh Template | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}" | itsm_oracle_refresh_actual_prod
    ansible.builtin.template:
      src: templates/expdp_parfile.par.j2
      dest: "{{ ora_s3_scratchpad }}/parfile_export_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.par"
    when: 
      - not file_status_prod.stat.exists
      - ansible_local.export.localfacts.export_fact_oracle_database_environment_purpose == "PROD"

  - name: Export Source Schema to Scratchpad Usng the Custom Parfile for "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}" | itsm_oracle_refresh_actual_prod
    shell: "expdp parfile={{ ora_s3_scratchpad }}/parfile_export_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.par > {{ ora_s3_scratchpad }}/log_export_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.log" 
    environment:
      ORACLE_SID: "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}"
      ORACLE_HOME: "{{ ansible_local.export.localfacts.export_fact_rdbms_home }}"
      LD_LIBRARY_PATH: "{{ ansible_local.export.localfacts.export_fact_rdbms_home }}/lib"
      PATH: "/usr/sbin:/usr/local/bin:/usr/bin:{{ ansible_local.export.localfacts.export_fact_rdbms_home }}/bin"
      become: true
      become_method: su
      become_user: oracle
    when: 
      - ansible_local.export.localfacts.export_fact_oracle_database_environment_purpose == "PROD"
    register: exp_details_prod

  # Block to Create Directories





